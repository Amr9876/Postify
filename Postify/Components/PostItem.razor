@inject AuthenticationStateProvider AuthStateProvider

<div class="d-flex justify-content-start mb-5 p-3">
    
    <div class="row">
        <div class="col-4">
            <Avatar Letter="@Item.Creator.Substring(0, 1)" />
        </div>
        
        <div class="col-8">
            <h4 class="mt-3 ms-3">@creatorName</h4>
            <p class="mt-2 me-3" style="opacity:0.6;">@Item.Date</p>
        </div>
    </div>
</div>

<div>
    <img src="@Item.ImageUrl" />
</div>

<div class="mt-4 d-flex justify-content-start ms-5">

        <a class="btn btn-primary" href="/post/open/@Item.Id">Open</a>

        @if(creatorName.Equals("YOU"))
        {
            <div class="container">

                <a class="btn btn-secondary" href="/post/edit/@Item.Id">Edit</a>                        

                <a class="btn btn-danger" href="/post/remove/@Item.Id">Remove</a>

            </div>
        }

</div>

@code {

    private string creatorName = string.Empty;

    [Parameter] public Post Item { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {

        var authState = await AuthStateProvider.GetAuthenticationStateAsync();

        creatorName = authState!.User!.Identity!.Name!.Equals(Item.Creator) ? "YOU" : Item.Creator;
    }

}
